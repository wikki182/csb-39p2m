{"version":3,"sources":["components/widgetText.js","components/widgetBar.js","components/widgetDoughnut.js","components/dashboard.js","App.js","index.js"],"names":["WidgetText","props","className","title","value","description","ReactFC","fcRoot","FusionCharts","Chart","FusionTheme","widgetBar","chartConfigs","type","width","height","dataFormat","dataSource","chart","bgColor","theme","data","widgetDoughnut","config","url","Dashboard","getData","arg","arr","state","items","arrLen","length","organicSource","directSource","referralSource","pageViews","users","newUsers","sourceArr","usersArr","i","organic_source","direct_source","referral_source","page_views","new_users","push","label","setState","console","log","updateDashboard","event","selectedValue","dropdownOptions","fetch","then","response","json","batchRowValues","valueRanges","values","rows","rowObject","j","month","Array","from","Set","reverse","Container","fluid","Row","Col","options","this","onChange","placeholder","Component","App","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.cc69bdce.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction WidgetText(props) {\r\n  return (\r\n    <div className=\"widgetWrap\">\r\n      <div className=\"widgetTitle\">{props.title}</div>\r\n      <div className=\"widgetValue\">\r\n        <div className=\"value\">{props.value}</div>\r\n        <div className=\"description\">{props.description}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default WidgetText;\r\n","import React from \"react\";\r\nimport ReactFC from \"react-fusioncharts\";\r\nimport FusionCharts from \"fusioncharts\";\r\nimport Chart from \"fusioncharts/fusioncharts.charts\";\r\nimport FusionTheme from \"fusioncharts/themes/fusioncharts.theme.fusion\";\r\nReactFC.fcRoot(FusionCharts, Chart, FusionTheme);\r\n\r\nfunction widgetBar(props) {\r\n  const chartConfigs = {\r\n    type: \"bar2D\", // The chart type\r\n    width: \"100%\", // Width of the chart\r\n    height: \"125\", // Height of the chart\r\n    dataFormat: \"json\", // Data type\r\n    dataSource: {\r\n      // Chart Configuration\r\n      chart: {\r\n        bgColor: \"#2a2a2a\",\r\n        theme: \"fusion\" //Set the theme for your chart\r\n      },\r\n      // Chart Data - from step 2\r\n      data: props.data\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"widgetWrap\">\r\n      <div className=\"widgetTitle\">{props.title}</div>\r\n      <div className=\"widgetValue\">\r\n        <ReactFC {...chartConfigs} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default widgetBar;\r\n","import React from \"react\";\r\nimport ReactFC from \"react-fusioncharts\";\r\nimport FusionCharts from \"fusioncharts\";\r\nimport Chart from \"fusioncharts/fusioncharts.charts\";\r\nimport FusionTheme from \"fusioncharts/themes/fusioncharts.theme.fusion\";\r\nReactFC.fcRoot(FusionCharts, Chart, FusionTheme);\r\n\r\nfunction widgetDoughnut(props) {\r\n  const chartConfigs = {\r\n    type: \"doughnut2D\", // The chart type\r\n    width: \"100%\", // Width of the chart\r\n    height: \"125\", // Height of the chart\r\n    dataFormat: \"json\", // Data type\r\n    dataSource: {\r\n      // Chart Configuration\r\n      chart: {\r\n        bgColor: \"#2a2a2a\",\r\n        theme: \"fusion\" //Set the theme for your chart\r\n      },\r\n      // Chart Data - from step 2\r\n      data: props.data\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"widgetWrap\">\r\n      <div className=\"widgetTitle\">{props.title}</div>\r\n      <div className=\"widgetValue\">\r\n        <ReactFC {...chartConfigs} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default widgetDoughnut;\r\n","import React, { Component } from \"react\";\r\nimport \"./dashboard.css\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport WidgetText from \"./widgetText\";\r\nimport WidgetBar from \"./widgetBar\";\r\nimport WidgetDoughnut from \"./widgetDoughnut\";\r\nimport Dropdown from \"react-dropdown\";\r\nimport \"react-dropdown/style.css\";\r\nimport { options } from \"fusioncharts\";\r\n//excel import\r\nconst config = {\r\n  apiKey: \"AIzaSyDMu-Vw30ykPPmFT3cXeunzKEi4EahzglI\",\r\n  spreadsheetId: \"1vcDPrMexD8bxNwwzK9IxF8wch6Hfezq2eooJACDiqgg\"\r\n};\r\nconst url = `https://sheets.googleapis.com/v4/spreadsheets/${config.spreadsheetId}/values:batchGet?ranges=Sheet1&majorDimension=ROWS&key=${config.apiKey}`;\r\n\r\nclass Dashboard extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      items: [],\r\n      dropdownOptions: [],\r\n      selectedValue: null,\r\n      organicSource: null,\r\n      directSource: null,\r\n      referralSource: null,\r\n      pageViews: null,\r\n      users: null,\r\n      newUsers: null,\r\n      sourceArr: [],\r\n      usersArr: []\r\n    };\r\n  }\r\n  getData = (arg) => {\r\n    const arr = this.state.items;\r\n    const arrLen = arr.length;\r\n\r\n    let selectedValue = null;\r\n    let organicSource = 0;\r\n    let directSource = 0;\r\n    let referralSource = 0;\r\n    let pageViews = 0;\r\n    let users = 0;\r\n    let newUsers = 0;\r\n    let sourceArr = [];\r\n    let usersArr = [];\r\n\r\n    for (let i = 0; i < arrLen; i++) {\r\n      if (arg == arr[i][\"month\"]) {\r\n        organicSource = arr[i].organic_source;\r\n        directSource = arr[i].direct_source;\r\n        referralSource = arr[i].referral_source;\r\n        pageViews = arr[i].page_views;\r\n        users = arr[i].users;\r\n        newUsers = arr[i].new_users;\r\n        sourceArr.push(\r\n          {\r\n            label: \"Organic Source\",\r\n            value: arr[i].new_users\r\n          },\r\n          {\r\n            label: \"Direct Source\",\r\n            value: arr[i].new_users\r\n          },\r\n          {\r\n            label: \"Referral Source\",\r\n            value: arr[i].new_users\r\n          }\r\n        );\r\n        usersArr.push(\r\n          {\r\n            label: \"Users\",\r\n            value: arr[i].users\r\n          },\r\n          {\r\n            label: \"New Users\",\r\n            value: arr[i].new_users\r\n          }\r\n        );\r\n      }\r\n    }\r\n    selectedValue = arg;\r\n    this.setState(\r\n      {\r\n        organicSource: organicSource,\r\n        directSource: directSource,\r\n        referralSource: referralSource,\r\n        pageViews: pageViews,\r\n        users: users,\r\n        newUsers: newUsers,\r\n        sourceArr: sourceArr,\r\n        usersArr: usersArr\r\n      },\r\n      () => {\r\n        console.log(this.state.organicSource);\r\n      }\r\n    );\r\n  };\r\n  updateDashboard = (event) => {\r\n    this.getData(event.value);\r\n    this.setState({ selectedValue: event.value }, () => {\r\n      console.log(this.state.organicSource);\r\n    });\r\n  };\r\n  componentDidMount() {\r\n    fetch(url)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        let batchRowValues = data.valueRanges[0].values;\r\n\r\n        const rows = [];\r\n\r\n        for (let i = 1; i < batchRowValues.length; i++) {\r\n          let rowObject = {};\r\n          for (let j = 0; j < batchRowValues[i].length; j++) {\r\n            rowObject[batchRowValues[0][j]] = batchRowValues[i][j];\r\n          }\r\n          rows.push(rowObject);\r\n        }\r\n        let dropdownOptions = [];\r\n\r\n        for (let i = 0; i < rows.length; i++) {\r\n          dropdownOptions.push(rows[i].month);\r\n        }\r\n\r\n        dropdownOptions = Array.from(new Set(dropdownOptions)).reverse();\r\n        this.setState(\r\n          {\r\n            items: rows,\r\n            dropdownOptions: dropdownOptions,\r\n            selectedValue: \"Jan 2018\"\r\n          },\r\n          () => this.getData(\"Jan 2018\")\r\n        );\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const chartData = [];\r\n\r\n    return (\r\n      <div>\r\n        <Container fluid>\r\n          <Row className=\"TopHeader\">\r\n            <Col> Dashboard </Col>\r\n            <Col>\r\n              {\" \"}\r\n              <Dropdown\r\n                options={this.state.dropdownOptions}\r\n                onChange={this.updateDashboard}\r\n                value={this.state.selectedValue}\r\n                placeholder=\"Select an option\"\r\n              />\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n        <Container>\r\n          <Row className=\"mainDashboard\">\r\n            <Col>\r\n              <WidgetText\r\n                title=\"Organic Source\"\r\n                value={this.state.organicSource}\r\n              />\r\n            </Col>\r\n            <Col>\r\n              <WidgetText\r\n                title=\"Direct Source\"\r\n                value={this.state.directSource}\r\n              />\r\n            </Col>\r\n            <WidgetText\r\n              title=\"referral Source\"\r\n              value={this.state.referralSource}\r\n            />\r\n            <Col>\r\n              <WidgetText title=\"Page Views\" value={this.state.pageViews} />\r\n            </Col>\r\n          </Row>\r\n          <Row className=\"mainDashboard\">\r\n            <Col>\r\n              <WidgetText title=\"Users\" value={this.state.users} />\r\n            </Col>\r\n            <Col>\r\n              <WidgetText title=\"New Users\" value={this.state.newUsers} />{\" \"}\r\n            </Col>\r\n          </Row>\r\n          <Row className=\"mainDashboard\">\r\n            <Col>\r\n              <WidgetBar\r\n                title=\"Source Comparison\"\r\n                data={this.state.sourceArr}\r\n              />\r\n            </Col>\r\n            <Col>\r\n              <WidgetDoughnut\r\n                title=\"Users Comparison\"\r\n                data={this.state.usersArr}\r\n              />\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n        {/* // <WidgetBar title=\"Title\" data={chartData} />\r\n        // <WidgetDoughnut title=\"Title\" data={chartData} /> */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Dashboard;\r\n","import \"./styles.css\";\n\n//import Chart from \"./components/chart\";\n\nimport Dashboard from \"./components/dashboard\";\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <Dashboard />\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}